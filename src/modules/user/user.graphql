type User {
    "Basic database identification field useful most of the time."
    id: ID!
    "UUID to identify entity in logs and another type of database and it is helpful to find user in other places."
    uid: UUID!

    first_name: String
    surname: String
    contact_number: String

    email: String!
    "It is possible to anyone make itself activate or deactivate."
    is_active: Boolean!
    "At the first all users are un-verified and should click on the link sent to there email."
    is_verify: Boolean!
    "Admin should have ability to block illegal users."
    is_block: Boolean!
    "Users can't delete there own account but they can archive their data to hide from aggregations."
    is_archive: Boolean!
    "Array of role numbers and each role has many different permissions."
    roles: [UUID]!

    "Record creation time and it change just when we create a record."
    created_at: DateTime!
    "Time of last update and it change every time use update itself."
    updated_at: DateTime
    "This field has relation with `is_archive` field in this entity and it is time of archive."
    archived_at: DateTime
    "Last time admin get token successfully."
    last_login_at: DateTime
}

# type Query {
#     "Get user"
#     user(email: String!): User!
# }

# type Mutation {
#     "Create new user and return it back"
#     addUser(email: String!, password: String!): User!
# }
